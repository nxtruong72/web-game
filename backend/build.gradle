plugins {
    id("org.jetbrains.kotlin.jvm") version "1.9.21"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.9.21"
    id("com.google.devtools.ksp") version "1.9.21-1.0.15"
    id("groovy")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "${micronautVersion}"
    id("io.micronaut.aot") version "${micronautVersion}"
//    for clean db when develop
    id("org.flywaydb.flyway") version "${flywayVersion}"
}

version = "0.1"
group = "org.theflies.webgame"

repositories {
    mavenCentral()
}

dependencies {
    ksp("io.micronaut.data:micronaut-data-processor")
    ksp("io.micronaut:micronaut-http-validation")
    ksp("io.micronaut.security:micronaut-security-annotations")
    ksp("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.reactor:micronaut-reactor")
    // Emails
    implementation("io.micronaut.email:micronaut-email-mailjet")
    implementation("io.micronaut.email:micronaut-email-template")
    implementation("io.micronaut.views:micronaut-views-velocity")

    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("io.github.oshai:kotlin-logging-jvm:${kotlinLoggingVersion}")
    implementation("org.springframework.security:spring-security-crypto:${springSecurityCryptoVersion}")
    implementation("org.slf4j:jcl-over-slf4j")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    runtimeOnly("org.postgresql:postgresql")
    runtimeOnly("org.yaml:snakeyaml")
    testImplementation("io.micronaut:micronaut-http-client")
    aotPlugins platform("io.micronaut.platform:micronaut-platform:${micronautVersion}")
    aotPlugins("io.micronaut.security:micronaut-security-aot")
}


application {
    mainClass.set("org.theflies.webgame.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("org.theflies.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        configurationProperties.put("micronaut.security.jwks.enabled","false")
    }
}

flyway {
    cleanDisabled = false
    url = "${System.env.POSTGRES_URL ?: 'jdbc:postgresql://127.0.0.1:5432/postgres'}"

    user = "${System.env.POSTGRES_USER ?: 'postgres'}"
    password = "${System.env.POSTGRES_PASS ?: 'changeme'}"
}
